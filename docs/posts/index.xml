<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Bitácora de Viaje de Ricardo</title>
    <link>https://richirrim.github.io/my_launchx_blog/posts/</link>
    <description>Recent content in Blog on Bitácora de Viaje de Ricardo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://richirrim.github.io/my_launchx_blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>POO al estilo Vanilla Js</title>
      <link>https://richirrim.github.io/my_launchx_blog/posts/poo-al-estilo-de-vanilla-js/</link>
      <pubDate>Wed, 13 Apr 2022 17:41:42 -0500</pubDate>
      
      <guid>https://richirrim.github.io/my_launchx_blog/posts/poo-al-estilo-de-vanilla-js/</guid>
      <description>Antes de empezar es necesario mencionar que Vanilla JavaScript (JS) no es un lenguaje basado en clases pero claro que podemos implementar la programación orientada a objetos (POO). JS es un poco rebelde y no le gusta hacer las cosas como a sus demás compañeros, por ende, la forma de implementar POO en este lenguaje no es igual a tu lenguaje favorito Orientado a Objetos. JS trabaja de una manera muy peculiar y a su manera implementa POO usando algo llamado Prototipos y para las clases usa algo llamado funciones constructuras pero tranki que todo lo miraremos con mucha calma para que quede claro.</description>
    </item>
    
    <item>
      <title>NodeJS modules y cómo usarlos en tu proyecto</title>
      <link>https://richirrim.github.io/my_launchx_blog/posts/nodejs-modules-y-como-usarlos-en-mi-proyecto/</link>
      <pubDate>Mon, 11 Apr 2022 14:46:12 -0500</pubDate>
      
      <guid>https://richirrim.github.io/my_launchx_blog/posts/nodejs-modules-y-como-usarlos-en-mi-proyecto/</guid>
      <description>Módulos Qué son los módulos en NodeJs? Un módulo no es nada más que una unidad de código organizado en archivos o directorios. El objetivo principal de crear o trabjar con modulos es que se pueda exportar con facilidad para poder reutilizarse en otras partes de la aplicación o ser utilizado por terceros.
Tipos de módulos Hay 3 tipos de módulos.
 Built-in modules: Son los módulos nativos de la API de Node.</description>
    </item>
    
    <item>
      <title>Objetos en Vanilla Js y Cómo crealos</title>
      <link>https://richirrim.github.io/my_launchx_blog/posts/objetos-en-vanilla-js-y-como-crealos/</link>
      <pubDate>Sat, 09 Apr 2022 17:54:59 -0500</pubDate>
      
      <guid>https://richirrim.github.io/my_launchx_blog/posts/objetos-en-vanilla-js-y-como-crealos/</guid>
      <description>⚠️Contenido cool en construcción&amp;hellip; 📦 La forma más simple de crear objetos en Vanilla JavaScript (JS) es utilizando la forma literal &amp;ldquo;object = {&amp;hellip;}&amp;quot;. Ahora, no está de más mencionar que en Programación Orientada a Objetos (POO) la creación de clases, objetos, etc., JS lo hace a su estilo. Y muy rapidamente te darás cuenta a lo que me refiero cuando digo que &amp;ldquo;a su estilo&amp;rdquo;, si continuas en este post y claro sera aun más obvio si ya has implementado ese paradigma en otros lenguajes como Python, PHP o Java.</description>
    </item>
    
    <item>
      <title>Cómo instalar Hugo en Windows</title>
      <link>https://richirrim.github.io/my_launchx_blog/posts/como-instalar-hugo-en-windows-linux-wsl/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://richirrim.github.io/my_launchx_blog/posts/como-instalar-hugo-en-windows-linux-wsl/</guid>
      <description>Hugo es un fast Framework para crear sitios web estáticos y está hecho en Go! . Ojo, para usarlo no necesitas instalar Go!, tranqui, ntp, no es necesario la instalación. Con su increíble velocidad y flexibilidad, Hugo hace que la construcción de sitios web sea divertida nuevamente.
Hugo lo puedes instalar en los sig. Sistemas Operativos:
 macOs Windows Linux OpenBSD FreeBSD  Y en cualquier otra PC donde se pueda instalar y ejecutar sin problemas Go!</description>
    </item>
    
    <item>
      <title>Html | Buenas prácticas</title>
      <link>https://richirrim.github.io/my_launchx_blog/posts/html-best-practices/</link>
      <pubDate>Thu, 07 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://richirrim.github.io/my_launchx_blog/posts/html-best-practices/</guid>
      <description>📷 Instagram | Ricardo Ortega para encontrar más contenido.
Recuerden que muchas de estas convenciones su uso o como la usen va depender de la empresa en la que estés trabajando, el proyecto, el equipo, etc. Y como dije antes su uso puede variar de proyecto en proyecto. Esta es una pequeña guia, es solo una probadita del clean code, así que ya puedes empezar a cosntruir proyectos más limpios, consistentes y escalables 👊🤠.</description>
    </item>
    
    <item>
      <title>La cultura de un desarrollad&lt;&gt;r de software</title>
      <link>https://richirrim.github.io/my_launchx_blog/posts/la-cultura-de-un-desarrollador-de-software/</link>
      <pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://richirrim.github.io/my_launchx_blog/posts/la-cultura-de-un-desarrollador-de-software/</guid>
      <description>Breve resumen de lo que va tratar este post, es un conjunto de ideas en las cuales pienso profundizar.
 🚀Un buen devolver es una persona que tiene un espacio de trabajo en el cual se siente cómodo para trabajar, es aquel que tiene todo el tiempo sus herramientas afiladas y correctamente configuradas. Una cosa que me pasa es que mi Pc se traba mucho y eso me estresa más que el código que escribo o las hrs que paso programando, tener todo en orden te hará tener mejor salud y paz mental.</description>
    </item>
    
    <item>
      <title>Mi ruta de aprendizaje.</title>
      <link>https://richirrim.github.io/my_launchx_blog/posts/post_2/</link>
      <pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://richirrim.github.io/my_launchx_blog/posts/post_2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mis expectativas</title>
      <link>https://richirrim.github.io/my_launchx_blog/posts/intro/</link>
      <pubDate>Mon, 21 Feb 2022 18:16:21 -0600</pubDate>
      
      <guid>https://richirrim.github.io/my_launchx_blog/posts/intro/</guid>
      <description>Usa este post para anotar tus expectativas de la misión.</description>
    </item>
    
  </channel>
</rss>
